<Window
    x:Class="EasyGifer.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:EasyGifer"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="Easy Gifer"
    Width="640"
    Height="450"
    mc:Ignorable="d">
    <Window.Resources>
        <Style x:Key="DarkWindow" TargetType="Window">
            <Setter Property="Background" Value="#121212" />
        </Style>
        <Style x:Key="DarkLabel" TargetType="Label">
            <Setter Property="Foreground" Value="#e0e0e0" />
        </Style>
        <Style x:Key="DarkTextBox" TargetType="TextBox">
            <Setter Property="Background" Value="#121212" />
            <Setter Property="BorderBrush" Value="#a0a0a0" />
            <Setter Property="Foreground" Value="#e0e0e0" />
        </Style>
        <Style x:Key="DarkGroupBox" TargetType="GroupBox">
            <Setter Property="BorderBrush" Value="#a0a0a0" />
            <Setter Property="BorderThickness" Value="0.51" />
            <Setter Property="Foreground" Value="#e0e0e0" />
        </Style>
        <Style x:Key="DarkRadioButton" TargetType="RadioButton">
            <Setter Property="BorderBrush" Value="#a0a0a0" />
            <Setter Property="Background" Value="#121212" />
            <Setter Property="Foreground" Value="#e0e0e0" />

            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid Width="13" Height="13">
                                    <Ellipse x:Name="Border" StrokeThickness="1">
                                        <Ellipse.Stroke>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <GradientStop Offset="0" Color="#a0a0a0" />
                                                <GradientStop Offset="1" Color="#a0a0a0" />
                                            </LinearGradientBrush>
                                        </Ellipse.Stroke>
                                        <Ellipse.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="#121212" />
                                                        <GradientStop Offset="1.0" Color="#121212" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Ellipse
                                        x:Name="CheckMark"
                                        Margin="4"
                                        Visibility="Collapsed">
                                        <Ellipse.Fill>
                                            <SolidColorBrush Color="#e0e0e0" />
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <ContentPresenter
                                Margin="4,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True" />
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Shape.Fill).                     (GradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Shape.Fill).                     (GradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Shape.Fill).                     (GradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Shape.Stroke).                     (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="#40000000" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Shape.Stroke).                     (GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="#40000000" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DarkCheckBox" TargetType="CheckBox">
            <Setter Property="Background" Value="#121212" />
            <Setter Property="BorderBrush" Value="#a0a0a0" />
            <Setter Property="Foreground" Value="#e0e0e0" />

            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border
                                    x:Name="Border"
                                    Width="13"
                                    Height="13"
                                    BorderThickness="1"
                                    CornerRadius="0">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Offset="0.0" Color="#a0a0a0" />
                                                    <GradientStop Offset="1.0" Color="#a0a0a0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="#121212" />
                                                    <GradientStop Offset="1.0" Color="#121212" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Border.Background>
                                    <Grid>
                                        <Path
                                            x:Name="CheckMark"
                                            Width="7"
                                            Height="7"
                                            Data="M 0 0 L 7 7 M 0 7 L 7 0"
                                            SnapsToDevicePixels="False"
                                            StrokeThickness="2"
                                            Visibility="Collapsed">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="#e0e0e0" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path
                                            x:Name="InderminateMark"
                                            Width="7"
                                            Height="7"
                                            Data="M 0 7 L 7 0"
                                            SnapsToDevicePixels="False"
                                            StrokeThickness="2"
                                            Visibility="Collapsed">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="#e0e0e0" />
                                            </Path.Stroke>
                                        </Path>
                                    </Grid>
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter
                                Margin="4,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True" />
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).                       (GradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).                       (GradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).                       (GradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).                       (GradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InderminateMark" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  FocusVisual  -->

        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle
                                Margin="2"
                                Stroke="#60000000"
                                StrokeDashArray="1 2"
                                StrokeThickness="1" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  Button  -->
        <Style x:Key="DarkButton" TargetType="Button">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="MinHeight" Value="23" />
            <Setter Property="MinWidth" Value="75" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            x:Name="Border"
                            BorderThickness="1"
                            CornerRadius="2"
                            TextBlock.Foreground="#e0e0e0">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Offset="0.0" Color="#a0a0a0" />
                                            <GradientStop Offset="1.0" Color="#a0a0a0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="0" Color="#272727" />
                                    <GradientStop Offset="1" Color="#272727" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter
                                Margin="2"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True" />
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.5" />
                                        <VisualTransition GeneratedDuration="0" To="Pressed" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).                       (GradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).                       (GradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).                       (GradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).                       (GradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).                       (GradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" />
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).                       (GradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefault" Value="true">

                                <Setter TargetName="Border" Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Offset="0.0" Color="{DynamicResource DefaultBorderBrushLightBrush}" />
                                                    <GradientStop Offset="1.0" Color="{DynamicResource DefaultBorderBrushDarkColor}" />
                                                </GradientStopCollection>
                                            </GradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="7*" />
            <ColumnDefinition Width="1.25*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.6*" />
            <RowDefinition Height="0.8*" />
            <RowDefinition Height="0.6*" />
            <RowDefinition Height="0.8*" />
            <RowDefinition Height="7.2*" />
        </Grid.RowDefinitions>

        <Label
            x:Name="InputFileLabel"
            Grid.Row="0"
            Grid.Column="0"
            Content="入力ファイル" />

        <TextBox
            x:Name="InputPathTextBox"
            Grid.Row="1"
            Grid.Column="0"
            Margin="4"
            VerticalContentAlignment="Center"
            Text="{Binding InpuPath}" PreviewDragOver="InputPathTextBox_PreviewDragOver" Drop="InputPathTextBox_Drop" />

        <Button
            x:Name="InputFileButton"
            Grid.Row="1"
            Grid.Column="1"
            Margin="5"
            Click="InputFileButton_Click"
            Content="ファイルを選択" />

        <Label
            x:Name="OutputFileLabel"
            Grid.Row="2"
            Grid.Column="0"
            Content="出力ファイル" />
        <TextBox
            x:Name="OutputPathTextBox"
            Grid.Row="3"
            Grid.Column="0"
            Margin="4"
            VerticalContentAlignment="Center"
            Text="{Binding OutputPath}" />

        <Button
            x:Name="OutputFileButton"
            Grid.Row="3"
            Grid.Column="1"
            Margin="5"
            Click="OutputFileButton_Click"
            Content="ファイルを選択" />

        <Button
            x:Name="GenerateGifButton"
            Grid.Row="4"
            Grid.Column="1"
            Margin="8"
            Click="GenerateGifButton_Click"
            Content="生成" />

        <StackPanel Grid.Row="4">
            <Label x:Name="SettingsLabel" Content="設定" />
            <GroupBox
                x:Name="GifWidthGroupBox"
                Margin="5"
                Header="横幅(縦幅はアスペクト比を維持するように設定されます)">
                <StackPanel>
                    <TextBox
                        x:Name="GifWidthTextBox"
                        Width="64px"
                        Height="20px"
                        Margin="4"
                        HorizontalAlignment="Left"
                        VerticalContentAlignment="Center"
                        Text="{Binding GifWidth}" />
                </StackPanel>
            </GroupBox>

            <GroupBox
                x:Name="FPSGroupBox"
                Margin="5"
                Header="フレームレート">
                <StackPanel>
                    <TextBox
                        x:Name="FPSTextBox"
                        Width="64px"
                        Height="20px"
                        Margin="4"
                        HorizontalAlignment="Left"
                        VerticalContentAlignment="Center"
                        Text="{Binding GifFps}" />
                </StackPanel>
            </GroupBox>

            <GroupBox
                x:Name="GifQualityGroupBox"
                Margin="5"
                Header="クオリティ">
                <StackPanel>
                    <RadioButton x:Name="GifQualityLow" Content="低">
                        <RadioButton.LayoutTransform>
                            <ScaleTransform ScaleX="1.25" ScaleY="1.25" />
                        </RadioButton.LayoutTransform>
                    </RadioButton>
                    <RadioButton
                        x:Name="GifQualityMedium"
                        Content="中"
                        IsChecked="True">
                        <RadioButton.LayoutTransform>
                            <ScaleTransform ScaleX="1.25" ScaleY="1.25" />
                        </RadioButton.LayoutTransform>
                    </RadioButton>
                    <RadioButton x:Name="GifQualityHigh" Content="高">
                        <RadioButton.LayoutTransform>
                            <ScaleTransform ScaleX="1.25" ScaleY="1.25" />
                        </RadioButton.LayoutTransform>
                    </RadioButton>
                    <RadioButton x:Name="GifQualityGod" Content="世界を犠牲にしてでも最高級のGIFを生成したい人向け">
                        <RadioButton.LayoutTransform>
                            <ScaleTransform ScaleX="1.25" ScaleY="1.25" />
                        </RadioButton.LayoutTransform>
                    </RadioButton>
                </StackPanel>
            </GroupBox>
            <CheckBox
                x:Name="OptimizeGif"
                Margin="5"
                Content="GIFを最適化する" />
        </StackPanel>
    </Grid>
</Window>
